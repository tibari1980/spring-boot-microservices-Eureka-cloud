package com.arcesi.ProductService.controllers.imp;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.arcesi.ProductService.controllers.ApiRestCategory;
import com.arcesi.ProductService.dtos.CategoryDTO;
import com.arcesi.ProductService.dtos.ProductDTO;
import com.arcesi.ProductService.dtos.requests.CategoryRequest;
import com.arcesi.ProductService.dtos.requests.ProductRequest;
import com.arcesi.ProductService.dtos.responses.CategoryResponse;
import com.arcesi.ProductService.dtos.responses.ProductResponse;
import com.arcesi.ProductService.services.CategoryService;

import lombok.extern.slf4j.Slf4j;

@CrossOrigin(origins = "http://localhost:8086")
@RestController
@RequestMapping(value = "/api/v1/categories/")
@Slf4j
@Validated
public class ApiRestCategoryController implements ApiRestCategory {

	@Autowired
	private CategoryService categoryService;
	@Autowired
	private ModelMapper modelMapper;

	@Override
	public ResponseEntity<ProductResponse> createProduct(ProductRequest productRequest, Long categoryId) {
		log.info("Inside méthode createProduct in Controller CategoryRestController  product: {} ,identifiant category : {}",productRequest.toString(), categoryId);
		ProductDTO productDTO=categoryService.createProduct(modelMapper.map(productRequest, ProductDTO.class),categoryId);
		return new ResponseEntity<ProductResponse>(modelMapper.map(productDTO, ProductResponse.class),HttpStatus.CREATED);
	}

	@Override
	public ResponseEntity<CategoryResponse> createCategory(CategoryRequest categoryRequest) {
		log.info("Inside méthode createCategory in Controller CategoryRestController  Category : {} ",categoryRequest.toString());
		CategoryDTO categoryDTO=categoryService.createCategory(modelMapper.map(categoryRequest, CategoryDTO.class));
		return new ResponseEntity<CategoryResponse>(modelMapper.map(categoryDTO, CategoryResponse.class),HttpStatus.CREATED);
	}

}
