package com.arcesi.orderservice;

import java.time.Instant;
import java.util.Date;
import java.util.UUID;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import com.arcesi.orderservice.entities.ClientEntity;
import com.arcesi.orderservice.entities.OrderEntity;
import com.arcesi.orderservice.repositories.ClientRepository;
import com.arcesi.orderservice.repositories.OrderRepository;

@SpringBootApplication
public class OrderServiceApplication {

	@Bean
	public ModelMapper modelMapper() {
		ModelMapper modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.LOOSE);
		return modelMapper;
	}

	public static void main(String[] args) {
		SpringApplication.run(OrderServiceApplication.class, args);
	}

	@Bean
	public CommandLineRunner run(final OrderRepository orderRepository, final ClientRepository clientRepository) {

		return args -> {

			for (int i = 0; i < 800; i++) {
				ClientEntity client = ClientEntity.builder().createAt(Instant.now()).updatedAt(Instant.now())
						.uidClient(UUID.randomUUID().toString()).dateNaissanceClient(new Date())
						.email("tibarinewdzigh" + i + "@gmail.com").nomClient("tibari" + i).prenomClient("zeroual" + i)
						.sexClient("M").adressePostaleClient("1" + i + " place des alpes 78280 Guyancout").build();

				ClientEntity clientSaved = clientRepository.save(client);
				OrderEntity order = OrderEntity.builder().updatedAt(Instant.now()).createAt(Instant.now())
						.uidOrder(UUID.randomUUID().toString()).dateOrder(Instant.now()).idProduct(new Long(i))
						.montantOrder((i % 2 != 0) ? 444 + 9 : 900 + 10).quantiteOrder((i % 2 != 0) ? 1 + 4 : 1 + 3)
						.clientEntity(client).build();
			}
		};
	}
}
