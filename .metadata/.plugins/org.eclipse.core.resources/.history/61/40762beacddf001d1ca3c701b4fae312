package com.arcesi.ProductService.validators;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import jakarta.validation.ConstraintViolation;
import jakarta.validation.Path;
import jakarta.validation.Validator;
import jakarta.validation.constraints.Max;

@Component
public class ObjectValidators<T> {

	@Autowired
	private Validator validator;

	public Set<String> validate(T objectToValidate) {
		Set<ConstraintViolation<T>> violations = validator.validate(objectToValidate);
		
		if (!violations.isEmpty()) {
			

			Map<Path, String> map = violations.stream().collect(Collectors.toMap(ConstraintViolation::getPropertyPath, ConstraintViolation::getMessage));

			return violations.stream().map(ConstraintViolation::getMessage ).collect(Collectors.toSet());
		}
		return Collections.emptySet();
	}
}
