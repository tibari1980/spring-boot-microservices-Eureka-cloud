#docker pull openzipkin/zipkin
#run zipkin on docker
server.port=9090
 spring.application.name=API-GATEWAY
 
 #spring.config.import=optional:configserver:http://localhost:9296
 
 management.tracing.sampling.probability=1.0
 
 
 spring.cloud.gateway.routes[0].id=ORDER-SERVICE
 spring.cloud.gateway.routes[0].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args[pattern]=/api/v1/orders/**
#spring.cloud.gateway.routes[0].predicates[1].args[pattern]=/api/v1/clients/**

spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args[name]=ORDER-SERVICE
spring.cloud.gateway.routes[0].filters[0].args[fallbackuri]=forward:/orderServiceFallBack



spring.cloud.gateway.routes[1].id=PAYMENT-SERVICE
 spring.cloud.gateway.routes[1].uri=lb://PAYMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args[pattern]=/api/v1/payments/**
#Implementing CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args[name]=PAYMENT-SERVICE
spring.cloud.gateway.routes[1].filters[0].args[fallbackuri]=forward:/paymentServiceFallBack



spring.cloud.gateway.routes[2].id=PRODUCT-SERVICE
 spring.cloud.gateway.routes[2].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[2].predicates[0].name=Path
spring.cloud.gateway.routes[2].predicates[0].args[pattern]=/api/v1/products/**

spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args[name]=PRODUCT-SERVICE
spring.cloud.gateway.routes[2].filters[0].args[fallbackuri]=forward:/productServiceFallBack

 
